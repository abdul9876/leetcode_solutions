class Solution {
    public int max(int[][] mat, int n, int m, int col) {
        int index = -1;
        int maxi = -1;
        for (int i = 0; i < n; i++) {
            if (mat[i][col] > maxi) {
                maxi = mat[i][col];
                  index = i;
            }
        }
        return index;
    }

    public int[] findPeakGrid(int[][] mat) {
        int n = mat.length;
        int m = mat[0].length;
        int low = 0, high = m - 1;

        while (low <= high) {
            int mid = (low + high) / 2;
            int max = max(mat, n, m, mid);
            int left = mid - 1 >= 0 ? mat[max][mid - 1] : -1;
            int right = mid + 1 < m ? mat[max][mid + 1] : -1;

            if (mat[max][mid] > left && mat[max][mid] > right) 
                return new int[]{max, mid};
                else if (mat[max][mid] < left) 
                high = mid -1;
             else 
                low = mid + 1;
            
        }

        return new int[]{-1,-1};
    }
}
