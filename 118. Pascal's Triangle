class Solution {
    public List<Integer> genaratelist(int row){
        long ans = 1;
        List<Integer> answer = new ArrayList<>();
        answer.add(1);
        for(int i = 1; i<row;i++){
            ans = ans * (row - i);
            ans = ans /i;
            answer.add((int)ans);
        }
        return answer;

    }
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> ans= new ArrayList<>();
        for(int i =1; i<=numRows;i++){
            ans.add(genaratelist(i));
        }
        return ans;
    }
}
//c++
class Solution {
    vector<int> genarate(int n){
        long long ans = 1;
   
        vector<int> answer;
             answer.push_back(1);
        for(int i =1; i<n;i++){
            ans = ans * (n-i);
            ans = ans / i;
            answer.push_back(ans);
        }
        return answer;
    }
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> ans;
        for(int i =1; i<=numRows;i++){
            ans.push_back(genarate(i));
        }
        return ans;
    }
};
